const double Rate_T1 = 1;
const double Rate_T3 = 1;
const double Rate_T4 = 1;
const double Rate_T2 = 1;
NbPlaces= 24;
NbTransitions= 21;


PlacesList ={ Req_c3_s2, Req_c3_s1, Req_c2_s2, Req_c2_s1, Req_c1_s2, Req_c1_s1, P7_, Treat_c3_s2, Treat_c3_s1, Treat_c2_s2, Treat_c2_s1, Treat_c1_s2, Server_s2, Treat_c1_s1, Server_s1, Wait_c3, P3_c3, Client_c3, Wait_c2, P3_c2, Client_c2, Wait_c1, P3_c1, Client_c1 };

TransitionsList ={ T1_0, T1_1, T1_2, T1_3, T1_4, T1_5, T3_0, T3_1, T3_2, T3_3, T3_4, T3_5, T4_0, T4_1, T4_2, T4_3, T4_4, T4_5, T2_0, T2_1, T2_2 };

Marking ={
	(Req_c3_s2 , 0);
	(Req_c3_s1 , 0);
	(Req_c2_s2 , 0);
	(Req_c2_s1 , 0);
	(Req_c1_s2 , 0);
	(Req_c1_s1 , 0);
	(P7_ , 0);
	(Treat_c3_s2 , 0);
	(Treat_c3_s1 , 0);
	(Treat_c2_s2 , 0);
	(Treat_c2_s1 , 0);
	(Treat_c1_s2 , 0);
	(Server_s2 , 1);
	(Treat_c1_s1 , 0);
	(Server_s1 , 1);
	(Wait_c3 , 0);
	(P3_c3 , 0);
	(Client_c3 , 1);
	(Wait_c2 , 0);
	(P3_c2 , 0);
	(Client_c2 , 1);
	(Wait_c1 , 0);
	(P3_c1 , 0);
	(Client_c1 , 1);
};

Transitions ={
	(T1_0, EXPONENTIAL(Rate_T1), 1, 1,  SINGLE);
	(T1_1, EXPONENTIAL(Rate_T1), 1, 1,  SINGLE);
	(T1_2, EXPONENTIAL(Rate_T1), 1, 1,  SINGLE);
	(T1_3, EXPONENTIAL(Rate_T1), 1, 1,  SINGLE);
	(T1_4, EXPONENTIAL(Rate_T1), 1, 1,  SINGLE);
	(T1_5, EXPONENTIAL(Rate_T1), 1, 1,  SINGLE);
	(T3_0, EXPONENTIAL(Rate_T3), 1, 1,  SINGLE);
	(T3_1, EXPONENTIAL(Rate_T3), 1, 1,  SINGLE);
	(T3_2, EXPONENTIAL(Rate_T3), 1, 1,  SINGLE);
	(T3_3, EXPONENTIAL(Rate_T3), 1, 1,  SINGLE);
	(T3_4, EXPONENTIAL(Rate_T3), 1, 1,  SINGLE);
	(T3_5, EXPONENTIAL(Rate_T3), 1, 1,  SINGLE);
	(T4_0, EXPONENTIAL(Rate_T4), 1, 1,  SINGLE);
	(T4_1, EXPONENTIAL(Rate_T4), 1, 1,  SINGLE);
	(T4_2, EXPONENTIAL(Rate_T4), 1, 1,  SINGLE);
	(T4_3, EXPONENTIAL(Rate_T4), 1, 1,  SINGLE);
	(T4_4, EXPONENTIAL(Rate_T4), 1, 1,  SINGLE);
	(T4_5, EXPONENTIAL(Rate_T4), 1, 1,  SINGLE);
	(T2_0, EXPONENTIAL(Rate_T2), 1, 1,  SINGLE);
	(T2_1, EXPONENTIAL(Rate_T2), 1, 1,  SINGLE);
	(T2_2, EXPONENTIAL(Rate_T2), 1, 1,  SINGLE);
};

InArcs={
	(Client_c1, T1_0, 1);
	(Client_c1, T1_1, 1);
	(Client_c2, T1_2, 1);
	(Client_c2, T1_3, 1);
	(Client_c3, T1_4, 1);
	(Client_c3, T1_5, 1);
	(Server_s1, T3_0, 1);
	(Req_c1_s1, T3_0, 1);
	(P7_, T3_0, 1);
	(Server_s2, T3_1, 1);
	(Req_c1_s2, T3_1, 1);
	(P7_, T3_1, 1);
	(Server_s1, T3_2, 1);
	(P7_, T3_2, 1);
	(Req_c2_s1, T3_2, 1);
	(Server_s2, T3_3, 1);
	(P7_, T3_3, 1);
	(Req_c2_s2, T3_3, 1);
	(Server_s1, T3_4, 1);
	(Req_c3_s1, T3_4, 1);
	(P7_, T3_4, 1);
	(Server_s2, T3_5, 1);
	(Req_c3_s2, T3_5, 1);
	(P7_, T3_5, 1);
	(Treat_c1_s1, T4_0, 1);
	(Treat_c1_s2, T4_1, 1);
	(Treat_c2_s1, T4_2, 1);
	(Treat_c2_s2, T4_3, 1);
	(Treat_c3_s1, T4_4, 1);
	(Treat_c3_s2, T4_5, 1);
	(P3_c1, T2_0, 1);
	(Wait_c1, T2_0, 1);
	(P3_c2, T2_1, 1);
	(Wait_c2, T2_1, 1);
	(P3_c3, T2_2, 1);
	(Wait_c3, T2_2, 1);
};

OutArcs={
	(T1_0, P7_, 1);
	(T1_0, Wait_c1, 1);
	(T1_0, Req_c1_s1, 1);
	(T1_1, Req_c1_s2, 1);
	(T1_1, Wait_c1, 1);
	(T1_1, P7_, 1);
	(T1_2, P7_, 1);
	(T1_2, Wait_c2, 1);
	(T1_2, Req_c2_s1, 1);
	(T1_3, P7_, 1);
	(T1_3, Wait_c2, 1);
	(T1_3, Req_c2_s2, 1);
	(T1_4, Req_c3_s1, 1);
	(T1_4, P7_, 1);
	(T1_4, Wait_c3, 1);
	(T1_5, Req_c3_s2, 1);
	(T1_5, P7_, 1);
	(T1_5, Wait_c3, 1);
	(T3_0, Treat_c1_s1, 1);
	(T3_1, Treat_c1_s2, 1);
	(T3_2, Treat_c2_s1, 1);
	(T3_3, Treat_c2_s2, 1);
	(T3_4, Treat_c3_s1, 1);
	(T3_5, Treat_c3_s2, 1);
	(T4_0, Server_s1, 1);
	(T4_0, P3_c1, 1);
	(T4_1, Server_s2, 1);
	(T4_1, P3_c1, 1);
	(T4_2, Server_s1, 1);
	(T4_2, P3_c2, 1);
	(T4_3, Server_s2, 1);
	(T4_3, P3_c2, 1);
	(T4_4, Server_s1, 1);
	(T4_4, P3_c3, 1);
	(T4_5, Server_s2, 1);
	(T4_5, P3_c3, 1);
	(T2_0, Client_c1, 1);
	(T2_1, Client_c2, 1);
	(T2_2, Client_c3, 1);
};

